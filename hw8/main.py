import numpy as np
from scipy import stats
import matplotlib.pyplot as plt

""" 1.
Даны значения величины заработной платы заемщиков банка (zp)
и значения их поведенческого кредитного скоринга
(ks): zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Найдите ковариацию этих двух величин с помощью элементарных действий,
а затем с помощью функции cov из numpy Полученные значения должны быть равны.
Найдите коэффициент корреляции Пирсона с помощью ковариации и
среднеквадратичных отклонений двух признаков, а затем
с использованием функций из библиотек numpy и pandas.
"""
zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
cov = np.mean(zp * ks) - np.mean(zp) * np.mean(ks)
print("1.")
print("Ковариация с помощью элементарных действий")
print(cov)
print("Несмещённые значения стандартных отклонений, если ковариация несмещённая")
print(np.cov(zp, ks, ddof=1)[0, 1] / (np.std(zp, ddof=1) * np.std(ks, ddof=1)))
print("Смещённые значения стандартных отклонений, если ковариация смещённая")
print(np.cov(zp, ks, ddof=0)[0, 1] / (np.std(zp, ddof=0) * np.std(ks, ddof=0)))
print("Коэффициент корреляции Пирсона")
r = np.corrcoef(zp, ks)[0, 1]
print(r)
plt.scatter(zp, ks)
plt.title(r)
plt.xlabel("zp")
plt.ylabel("ks")
plt.show()

""" 2. 
Измерены значения IQ выборки студентов, обучающихся в местных технических вузах: 
131, 125, 115, 122, 131, 115, 107, 99, 125, 111. 
Известно, что в генеральной совокупности IQ распределен нормально. 
Найдите доверительный интервал для математического ожидания с надежностью 0.95.
"""
iq = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
n = 10
x_mean = np.mean(iq)
se = np.std(iq, ddof=1)
t = stats.t.ppf(0.975, n - 1)
print("\n2.")
print('Доверительный интервал для математического ожидания с надёжностью 0.95 равен:')
print([x_mean - t * se / np.sqrt(n), x_mean + t * se / np.sqrt(n)])

""" 3.
Известно, что рост футболистов в сборной распределен нормально 
с дисперсией генеральной совокупности, равной 25 кв.см. 
Объем выборки равен 27, среднее выборочное составляет 174.2. 
Найдите доверительный интервал для математического ожидания с надежностью 0.95.
"""
sigma = 25
n = 27
x_mean = 174.2
t = stats.norm.ppf(0.975)
se = t * np.sqrt(sigma / n)
print("\n3.")
print('Доверительный интервал для математического ожидания с надёжностью 0.95 равен:')
print(x_mean - se, x_mean + se)
